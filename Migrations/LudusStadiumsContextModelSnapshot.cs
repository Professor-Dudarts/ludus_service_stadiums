// <auto-generated />
using System;
using LudusStadium.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LudusStadium.Migrations
{
    [DbContext(typeof(LudusStadiumsContext))]
    partial class LudusStadiumsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("LudusStadium.Models.address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("zip")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("ID");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("LudusStadium.Models.schedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FK_Match_ID")
                        .HasColumnType("int");

                    b.Property<int>("FK_Stadium_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("matchDate")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("FK_Stadium_ID");

                    b.ToTable("schedule", (string)null);
                });

            modelBuilder.Entity("LudusStadium.Models.stadium", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FK_Address_ID")
                        .HasColumnType("int");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("FK_Address_ID");

                    b.ToTable("stadium", (string)null);
                });

            modelBuilder.Entity("LudusStadium.Models.schedule", b =>
                {
                    b.HasOne("LudusStadium.Models.stadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("FK_Stadium_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Stadium_ID");

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("LudusStadium.Models.stadium", b =>
                {
                    b.HasOne("LudusStadium.Models.address", "Address")
                        .WithMany()
                        .HasForeignKey("FK_Address_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Address_ID");

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
